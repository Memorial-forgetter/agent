from langchain.agents import Tool
from tools.function import empty, Determine_collider, Determine_confounder, Determine_edge_direction, condition_independent_test, generate_causalgraph, ATE_sim
import tools.executor as executor

empty_tools = Tool(
    name='empty',
    func=empty,
    description='''if No action needed ,use this tool. use this tool default.input is original response\n'''
)
collider = Tool(
    name='Determine_collider',
    func=lambda input_str: Determine_collider(input_str, executor.memory),
    description='''you should first generate causal graph and then use this tool.Useful When we are interested in whether there is a collider between two variables(ie common effect), we use this tool and the input is {"cg_name":...,"interesting_var":[...]}, where interesting_var is what Variable we want to test, cg_name is the name of causal generated by 'Generate Causal'.The output of the tool is yes or no or uncertainty and may be the variable name of the collider. Make sure the causal graph has been generated before using this tool\n'''
)
confound = Tool(
    name='Determine_confounder',
    func=lambda input_str: Determine_confounder(input_str, executor.memory),
    description='''you should first generate causal graph and then use this tool.Useful When we are interested in whether there is a cofounder (ie common cause) between two variables, we use this tool and the input is {"cg_name":...,"interesting_var":[...]}, where interesting_var is what Variable we want to test, cg_name is the name of causal generated by 'Generate Causal'.The output of the tool is yes or no or uncertainty and the backdoor path that may lead to the existence of the cofounder. Make sure the causal graph has been generated before using this tool\n'''
)
edge_direction = Tool(
    name='Determine_edge_directions',
    func=lambda input_str: Determine_edge_direction(input_str, executor.memory),
    description='''you should first generate causal graph and then use this tool.Useful when we are interested in whether there is a direct edge between two variables and the direction of the edge (such as determining whether A directly leads to B)., we use this tool and the input is {"cg_name"=...,"interesting_var"=[...]}, where interesting_var is what Variable we want to test, cg_name is the name of causal generated by 'Generate Causal'.The output of the tool is the relationship of two variables (ie A cause B). Make sure the causal graph has been generated before using this tool\n'''
)

condition_independent_test_tools = Tool(
    name='condition independent test',
    func=condition_independent_test,
    description='''Useful for when you need to test the *** independent or d-separate *** of variable A and variable B condition on variable C. input should be a json with format below {"filename":...,"interesting_var":[...],"condition":[...]},"interesting_var" is a list of variables user interested in. for example, if user want to test independent(d-separate) between X and Y condition on Z,W,Q , interesting_var is ["X","Y"], condition is ["Z","W","Q"]. condition is [] if no condition provided. When using this tool, you can't use the following tools: generate_causalgraph_tool\n'''
)
generate_causalgraph_tool = Tool(
    name='Generate Causal',
    func=lambda input_str: generate_causalgraph(input_str, executor.memory),
    description='''Useful for when you need to generate causal graph (or partial causal graph). input should be a json with format below {"filename":...,"analyse_relationship":...,"interesting_var":[...](Optional)}.if you want to analyse relationship between variables( such as cause effect, coufounder , Collider), analyse_relationship = "True" and please generate complete causal graph and  interesting_var is [](which means causal graph contain all variables) .if we only need to generate **partial causal graph** (for example, generate a partial causal graph for some variables), interesting_var is used and it's values are list of variables appear in causal graph and analyse_relationship is "False".Further more, if needed, you can analyse variables relationship in causal graph generated by this tool through these tools : Determine_collider,Determine_confounder,Determine_edge_direction\n'''
)
ate_tool = Tool(
    name='calculate CATE',
    func=ATE_sim,
    description='''Useful for when you need to calculate (conditional) average treatment effect (ATE or CATE, etc. in math function is E(Y(T=T1)-Y(T=T0) | X=x) and means if we use treatment, what uplift we will get from treatment).This tool use double machine learn algorithm to calculate ate. input is  a json with format {"filename":...,config: {Y:[...],T:[...],X:[...],T0:...,T1:...} }. Y are names of outcome, T are names of treatment, X are names of covariate affect both T and Y (i.e. confounder). T1 and T0 are two different values of T that need to be calculated in ATE. you should extract each name from the description.\n'''
)